basePath: /api
definitions:
  models.GenreRequest:
    properties:
      name:
        type: string
    type: object
  models.MovieRequest:
    properties:
      genre_id:
        type: integer
      name:
        type: string
      overview:
        type: string
      price:
        type: number
      release_date:
        type: string
      type_id:
        type: integer
    type: object
  models.RentRequest:
    properties:
      end_date:
        type: string
      movie_ids:
        items:
          type: integer
        type: array
      start_date:
        type: string
      user_id:
        type: integer
    type: object
  models.Response:
    properties:
      data: {}
      message:
        type: string
      status:
        type: string
    type: object
  models.UserRequest:
    properties:
      lastname:
        type: string
      surname:
        type: string
    type: object
info:
  contact:
    email: jorgemvv01@gmail.com
    name: Jorge Mario Villarreal V.
    url: https://www.linkedin.com/in/jorgemariovillarreal/
  description: 'A simple Go-REST-API to manage movie rentals \n GitHub Repository:
    https://github.com/jorgemvv01/go-api'
  title: VideoClub / Go-REST-API
  version: "1.0"
paths:
  /genres:
    get:
      description: Get all Genres.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Response'
      summary: Get all Genres
      tags:
      - Movie Genre
  /genres/{ID}:
    get:
      description: Get a genre by ID.
      parameters:
      - description: Get genre by ID
        in: path
        name: ID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Response'
      summary: Get Genre by ID
      tags:
      - Movie Genre
  /genres/create:
    post:
      description: Create a new genre.
      parameters:
      - description: Create genre
        in: body
        name: tags
        required: true
        schema:
          $ref: '#/definitions/models.GenreRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Response'
      summary: Create Genre
      tags:
      - Movie Genre
  /genres/delete/{ID}:
    delete:
      description: Delete Genre by ID.
      parameters:
      - description: Delete genre by ID
        in: path
        name: ID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Response'
      summary: Delete Genre
      tags:
      - Movie Genre
  /genres/update/{ID}:
    put:
      description: Update Genre by ID.
      parameters:
      - description: Update genre by ID
        in: path
        name: ID
        required: true
        type: string
      - description: Update genre
        in: body
        name: tags
        required: true
        schema:
          $ref: '#/definitions/models.GenreRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Response'
      summary: Update Genre
      tags:
      - Movie Genre
  /movies:
    get:
      description: Get all Movies.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Response'
      summary: Get all Movies
      tags:
      - Movies
  /movies/{ID}:
    get:
      description: Get a movie by ID.
      parameters:
      - description: Get movie by ID
        in: path
        name: ID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Response'
      summary: Get Movie by ID
      tags:
      - Movies
  /movies/create:
    post:
      description: Create a new movie.
      parameters:
      - description: Create movie
        in: body
        name: tags
        required: true
        schema:
          $ref: '#/definitions/models.MovieRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Response'
      summary: Create Movie
      tags:
      - Movies
  /movies/delete/{ID}:
    delete:
      description: Delete Movie by ID.
      parameters:
      - description: Delete Movie by ID
        in: path
        name: ID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Response'
      summary: Delete Movie
      tags:
      - Movies
  /movies/update/{ID}:
    put:
      description: Update Movie by ID.
      parameters:
      - description: Update movie by ID
        in: path
        name: ID
        required: true
        type: string
      - description: Update movie
        in: body
        name: tags
        required: true
        schema:
          $ref: '#/definitions/models.MovieRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Response'
      summary: Update Movie
      tags:
      - Movies
  /rent/create:
    post:
      description: Create a new rent.
      parameters:
      - description: Create rent
        in: body
        name: tags
        required: true
        schema:
          $ref: '#/definitions/models.RentRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Response'
      summary: Create rent
      tags:
      - Rent
  /types/:
    get:
      description: Get all Types
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Response'
      summary: Get all Types
      tags:
      - Movie Type
  /types/{ID}:
    get:
      description: Get Type by ID
      parameters:
      - description: Get Type by ID
        in: path
        name: ID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Response'
      summary: Get Type by ID
      tags:
      - Movie Type
  /users:
    get:
      description: Get all Users.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Response'
      summary: Get all Users
      tags:
      - Users
  /users/{ID}:
    get:
      description: Get a user by ID.
      parameters:
      - description: Get user by ID
        in: path
        name: ID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Response'
      summary: Get User by ID
      tags:
      - Users
  /users/create:
    post:
      description: Create a new user.
      parameters:
      - description: Create user
        in: body
        name: tags
        required: true
        schema:
          $ref: '#/definitions/models.UserRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Response'
      summary: Create User
      tags:
      - Users
  /users/delete/{ID}:
    delete:
      description: Delete User by ID.
      parameters:
      - description: Delete user by ID
        in: path
        name: ID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Response'
      summary: Delete User
      tags:
      - Users
  /users/update/{ID}:
    put:
      description: Update User by ID.
      parameters:
      - description: Update user by ID
        in: path
        name: ID
        required: true
        type: string
      - description: Update user
        in: body
        name: tags
        required: true
        schema:
          $ref: '#/definitions/models.UserRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Response'
      summary: Update User
      tags:
      - Users
swagger: "2.0"
